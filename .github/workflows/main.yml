name: CI

on: [push]

jobs:

  build-and-verify:
    name: Build and verify (JDK ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: ['6', '8', '11', '17', '18']
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work/junit4/junit4/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'optimizing-ci-builds'
      - run: touch starting_buildandverify_uses-checkout_21
      - run: rm starting_buildandverify_uses-checkout_21
      - uses: actions/checkout@v2
      - run: touch starting_buildandverify_DownloadMavenDownloadwithdefaultJDKbecauseOpenJDK6doesnotsupportTLS12_22
      - run: rm starting_buildandverify_DownloadMavenDownloadwithdefaultJDKbecauseOpenJDK6doesnotsupportTLS12_22
      - name: Download Maven # Download with default JDK because OpenJDK 6 does not support TLS 1.2
        run: ./mvnw --version
      - run: touch starting_buildandverify_SetupJDK6_24
      - run: rm starting_buildandverify_SetupJDK6_24
      - name: Set up JDK 6
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: touch starting_buildandverify_SetupJDK_29
      - run: rm starting_buildandverify_SetupJDK_29
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin
          cache: maven
      - run: touch starting_buildandverify_Buildandverify_36
      - run: rm starting_buildandverify_Buildandverify_36
      - name: Build and verify
        run: ./mvnw verify javadoc:javadoc site:site --batch-mode --errors --settings .github/workflows/settings.xml
      - run: touch starting_finished_finished_8979874
        if: always()
      - run: rm starting_finished_finished_8979874
        if: always()
      - name: rat check
        if: always()
        run: |
           if [ -f /home/runner/work/junit4/junit4/target/rat.txt ]; then cat /home/runner/work/junit4/junit4/target/rat.txt; fi
      - name: Check script file exists and execute
        if: always()
        run: |
          [ -f .github/workflows/script.py ] && python .github/workflows/script.py
          [ -f /home/runner/work/junit4/junit4/optimizing-ci-builds-ci-analysis/job.csv ] || mkdir -p /home/runner/work/junit4/junit4/optimizing-ci-builds-ci-analysis/; echo "${GITHUB_RUN_ID},${GITHUB_JOB},junit4,${GITHUB_WORKFLOW}" > /home/runner/work/junit4/junit4/optimizing-ci-builds-ci-analysis/job.csv
      - name: Checkout to destination CI-analyzes repo
        uses: actions/checkout@v3
        if: always()
        with:
          path: junit4
          ref: '1687017076-548a464'
          repository: 'UT-SE-Research/ci-analyzes'
          token: '${{ secrets.API_TOKEN_GITHUB }}'
          persist-credentials: true
      - name: Copy files to push to another directory
        if: always()
        run: |
          mkdir -p junit4/junit4/.github/workflows/main/buildandverify_java_${{ matrix.java }}
          cp -rvT optimizing-ci-builds-ci-analysis junit4/junit4/.github/workflows/main/buildandverify_java_${{ matrix.java }}
      - run: echo https://github.com/UT-SE-Research/ci-analyzes/tree/1687017076-548a464/junit4/.github/workflows/main/buildandverify_java_${{ matrix.java }}
      - name: Pushes analysis to another repository
        if: always()
        working-directory: junit4
        run: |
          commit_message=$GITHUB_REPOSITORY@$GITHUB_WORKFLOW_SHA
          git config --global user.name 'UT-SE-Research'
          git config --global user.email '${{ secrets.EMAIL }}'
          git add .
          git commit -m $commit_message
          while ! git push origin 1687017076-548a464; do
            git pull --rebase origin 1687017076-548a464
            sleep $((RANDOM % 5 + 1))
          done

  publish-snapshots:
    name: Publish snapshot artifacts
    needs: build-and-verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work/junit4/junit4/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'optimizing-ci-builds'
      - run: touch starting_publishsnapshots_uses-checkout_45
      - run: rm starting_publishsnapshots_uses-checkout_45
      - uses: actions/checkout@v2
      - run: touch starting_publishsnapshots_DownloadMavenDownloadwithdefaultJDKbecauseOpenJDK6doesnotsupportTLS12_46
      - run: rm starting_publishsnapshots_DownloadMavenDownloadwithdefaultJDKbecauseOpenJDK6doesnotsupportTLS12_46
      - name: Download Maven # Download with default JDK because OpenJDK 6 does not support TLS 1.2
        run: ./mvnw --version
      - run: touch starting_publishsnapshots_SetupJDK_48
      - run: rm starting_publishsnapshots_SetupJDK_48
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - run: touch starting_publishsnapshots_Publishsnapshotartifacts_52
      - run: rm starting_publishsnapshots_Publishsnapshotartifacts_52
      - name: Publish snapshot artifacts
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: ./mvnw deploy --batch-mode --errors --activate-profiles generate-docs --settings .github/workflows/settings.xml
      - run: touch starting_finished_finished_8979874
        if: always()
      - run: rm starting_finished_finished_8979874
        if: always()
      - name: rat check
        if: always()
        run: |
           if [ -f /home/runner/work/junit4/junit4/target/rat.txt ]; then cat /home/runner/work/junit4/junit4/target/rat.txt; fi
      - name: Check script file exists and execute
        if: always()
        run: |
          [ -f .github/workflows/script.py ] && python .github/workflows/script.py
          [ -f /home/runner/work/junit4/junit4/optimizing-ci-builds-ci-analysis/job.csv ] || mkdir -p /home/runner/work/junit4/junit4/optimizing-ci-builds-ci-analysis/; echo "${GITHUB_RUN_ID},${GITHUB_JOB},junit4,${GITHUB_WORKFLOW}" > /home/runner/work/junit4/junit4/optimizing-ci-builds-ci-analysis/job.csv
      - name: Checkout to destination CI-analyzes repo
        uses: actions/checkout@v3
        if: always()
        with:
          path: junit4
          ref: '1687017076-548a464'
          repository: 'UT-SE-Research/ci-analyzes'
          token: '${{ secrets.API_TOKEN_GITHUB }}'
          persist-credentials: true
      - name: Copy files to push to another directory
        if: always()
        run: |
          mkdir -p junit4/junit4/.github/workflows/main/publishsnapshots
          cp -rvT optimizing-ci-builds-ci-analysis junit4/junit4/.github/workflows/main/publishsnapshots
      - run: echo https://github.com/UT-SE-Research/ci-analyzes/tree/1687017076-548a464/junit4/.github/workflows/main/publishsnapshots
      - name: Pushes analysis to another repository
        if: always()
        working-directory: junit4
        run: |
          commit_message=$GITHUB_REPOSITORY@$GITHUB_WORKFLOW_SHA
          git config --global user.name 'UT-SE-Research'
          git config --global user.email '${{ secrets.EMAIL }}'
          git add .
          git commit -m $commit_message
          while ! git push origin 1687017076-548a464; do
            git pull --rebase origin 1687017076-548a464
            sleep $((RANDOM % 5 + 1))
          done
